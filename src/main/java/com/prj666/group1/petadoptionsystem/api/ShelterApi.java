/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.prj666.group1.petadoptionsystem.api;

import com.prj666.group1.petadoptionsystem.dto.ModelApiResponse;
import com.prj666.group1.petadoptionsystem.dto.ShelterAddPetPostRequest;
import com.prj666.group1.petadoptionsystem.dto.ShelterUpdateContactsPutRequest;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-10-31T17:36:43.291576-04:00[America/Toronto]", comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "shelter", description = "the shelter API")
@RequestMapping("${openapi.petAdoptionSystem.base-path:/api/v1}")
public interface ShelterApi {

    /**
     * POST /shelter/add-pet : Add a new pet to the shelter
     *
     * @param shelterAddPetPostRequest  (required)
     * @return Pet added successfully (status code 201)
     */
    @Operation(
        operationId = "shelterAddPetPost",
        summary = "Add a new pet to the shelter",
        responses = {
            @ApiResponse(responseCode = "201", description = "Pet added successfully", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ModelApiResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/shelter/add-pet",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    ResponseEntity<ModelApiResponse> shelterAddPetPost(
        @Parameter(name = "ShelterAddPetPostRequest", description = "", required = true) @Valid @RequestBody ShelterAddPetPostRequest shelterAddPetPostRequest
    );


    /**
     * PUT /shelter/update-contacts : Update shelter contact information
     *
     * @param shelterUpdateContactsPutRequest  (required)
     * @return Shelter contacts updated successfully (status code 200)
     */
    @Operation(
        operationId = "shelterUpdateContactsPut",
        summary = "Update shelter contact information",
        responses = {
            @ApiResponse(responseCode = "200", description = "Shelter contacts updated successfully", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ModelApiResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/shelter/update-contacts",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    ResponseEntity<ModelApiResponse> shelterUpdateContactsPut(
        @Parameter(name = "ShelterUpdateContactsPutRequest", description = "", required = true) @Valid @RequestBody ShelterUpdateContactsPutRequest shelterUpdateContactsPutRequest
    );

}
